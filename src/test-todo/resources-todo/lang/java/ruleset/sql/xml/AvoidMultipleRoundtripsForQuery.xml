<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>violation: Avoid multiple roundtrips for Query</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>17</expected-linenumbers>
        <code><![CDATA[
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import java.util.List;

public class Foo {

    @PersistenceContext(unitName = "rPersistenceUnit")
    protected EntityManager entityManager;

    public Object findInformationByCodeBad(String code) {
        Query q = this.entityManager.createQuery("SELECT reas FROM Information reas WHERE reas.code = :code", Object.class);
        q.setParameter("code", code);
        List results = q.getResultList();
        if (results != null && !results.isEmpty()) {
            return (Object) q.getSingleResult(); // violation, 2nd query
        }
        return null;
    }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>no violation: Avoid multiple roundtrips for Query</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import java.util.List;

public class Foo {

    @PersistenceContext(unitName = "rPersistenceUnit")
    protected EntityManager entityManager;

    public Object findInformationByCodeGoot(String code) {
        Query q = this.entityManager.createQuery("SELECT reas FROM Information reas WHERE reas.code = :code", Object.class);
        q.setParameter("code", code);
        try {
            return (Object) q.getSingleResult(); // Ok, 1 query
        }
        catch(NoResultException e) {
            return null;
        }
    }
}
     ]]></code>
    </test-code>
</test-data>
