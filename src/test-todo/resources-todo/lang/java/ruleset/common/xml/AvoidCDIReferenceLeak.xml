<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>violation: missing destroy in finally</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <code><![CDATA[
import javax.enterprise.inject.spi.CDI;
public class CDIStuff {
	private void bad1() {
		MyClass o = CDI.current().select(MyClass.class).get();
		o.doStuff();
	}
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: missing destroy</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <code><![CDATA[
import javax.enterprise.inject.spi.CDI;
public class CDIStuff {
	private void bad2() {
		MyClass o = CDI.current().select(MyClass.class).get();
		try {
			o.doStuff();
		} finally {
			CDI.current(); // no destroy
		}
	}
}
     ]]></code>
    </test-code>

    <test-code>
    <description>violation: destroy wrong one</description>
    <expected-problems>1</expected-problems>
    <expected-linenumbers>5</expected-linenumbers>
    <code><![CDATA[
import javax.enterprise.inject.spi.CDI;
public class CDIStuff {
	private void bad3() {
		Object other;
		MyClass o = CDI.current().select(MyClass.class).get();
		try {
			o.doStuff();
		} finally {
			CDI.current().destroy(other); // destroy wrong one
		}
	}
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: destroy wrong one with separate var declaration</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <code><![CDATA[
import javax.enterprise.inject.spi.CDI;
public class CDIStuff {
	private void bad4() {
		Object other;
		MyClass o;
		o = CDI.current().select(MyClass.class).get();
		try {
			doStuffMyself();
		} finally {
			CDI.current().destroy(other); // destroy wrong one
		}
	}
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import javax.enterprise.inject.spi.CDI;
public class CDIStuff {
	private void good2() {
		MyClass o = CDI.current().select(MyClass.class).get();
		try {
			doStuffMyself();
		} finally {
			CDI.current().destroy(o); // destroy properly
		}
	}
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation, with separate var declaration</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import javax.enterprise.inject.spi.CDI;
public class CDIStuff {
	private void good3() {
		MyClass o;
		o = CDI.current().select(MyClass.class).get();
		try {
			doStuffMyself();
		} finally {
			CDI.current().destroy(o); // destroy properly
		}
	}
}
     ]]></code>
    </test-code>

</test-data>
