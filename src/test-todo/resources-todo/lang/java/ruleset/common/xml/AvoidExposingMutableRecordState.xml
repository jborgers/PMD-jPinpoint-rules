<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>violation: Avoid exposing mutable record state, use copyOf in the compact constructor.</description>
        <expected-problems>3</expected-problems>
        <expected-linenumbers>9, 12, 21</expected-linenumbers>
        <code><![CDATA[
import java.lang.*;
import java.util.*;
import static java.util.List.copyOf;

@Builder
public record Document(
    long applicantDocumentId,
    String applicantName,
    List<File> files // bad 1
) {}

record BadRecord(String name, List<String> list) { // bad 2, possibly mutable List exposed
}

record GoodRecord(String name, List<String> list) {
  public GoodRecord {
    list = List.copyOf(list); // good, immutable list
  }
}

record SetRecord(String name, Set<String> set) { // bad 3
}

record MapRecord(String name, Map<String> map) {
    public MapRecord {
        map = Map.copyOf(map); // good
    }
}

record GoodRecordStaticImport(String name, List<String> list) {
  public GoodRecordStaticImport {
    list = copyOf(list); // good, immutable list
  }
}

record GoodRecordNullable(String name, @Nullable List<String> list) {
    public GoodRecordNullable {
        if (list != null) {
            list = List.copyOf(list);
        }
    }
}

record GoodRecordNotNull(String name, @NotNull List<String> list) {
    public GoodRecordNotNull {
        list = List.copyOf(list);
    }
}

record GoodRecordNonNull(String name, @NonNull List<String> list) {
    public GoodRecordNonNull {
        list = List.copyOf(list);
    }
}

record GoodRecordTernary(String name, List<String> list) {
    public GoodRecordTernary {
        list = (list == null) ? null : List.copyOf(list); // keep the state null when null is supplied.
    }
}

record GoodRecordIf(String name, List<String> list) {
    public GoodRecordIf {
        if (list == null) {
            list = null; // keep the state null when null is supplied.
        }
        else {
            list = List.copyOf(list);
        }
    }
}
     ]]></code>
    </test-code>
</test-data>
