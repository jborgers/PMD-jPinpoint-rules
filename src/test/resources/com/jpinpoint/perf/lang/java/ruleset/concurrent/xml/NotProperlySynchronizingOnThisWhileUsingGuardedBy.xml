<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy, bad, no synchronized</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>7,10</expected-linenumbers>
        <code><![CDATA[
 import net.jcip.annotations.GuardedBy;
 public class Bad1 {
    @GuardedBy("this")
    private String txt;

    public String getText() {
        return txt; // bad
    }
    public void setText(String t) {
        txt = t; // bad
    }
}
    ]]></code>
    </test-code>

    <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy, bad with modifier, getter not synced</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Bad2 {
    @GuardedBy("this")
    private String txt;

    public String getText() {
        return txt; // bad
    }
    public synchronized void setText(String t) {
        txt = t;
    }
}
    ]]></code>
    </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy, bad with modifier, setter not synced</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>10</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Bad3 {
    @GuardedBy("this")
    private String txt;

    public synchronized String getText() {
        return txt;
    }
    public void setText(String t) {
        txt = t; // bad
    }
}
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy, bad with modifier, setter not synced</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>10</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Bad4 {
    @GuardedBy("this")
    private String txt;

    public synchronized String getText() {
        return txt;
    }
    public void setText(String t) {
        txt = t; // bad
    }
}
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy, bad with block, setter not synced</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>12</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Bad5 {
    @GuardedBy("this")
    private String txt;

    public String getText() {
        synchronized(this) {
            return txt;
        }
    }
    public void setText(String t) {
        txt = t; // bad
    }
}
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy bad with block, getter not synced</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Bad6 {
    @GuardedBy("this")
    private String txt;

    public String getText() {
        return txt; // bad
    }
    public void setText(String t) {
        synchronized(this) {
            txt = t;
        }
    }
}
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy bad with blocks, wrong lock</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>9,14</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Bad7 {
    @GuardedBy("this")
    private String txt;
    private final Object LOCK = new Object();

    public String getText() {
        synchronized(LOCK) {
            return txt; // bad
        }
    }
    public String setText(String t) {
        synchronized(LOCK) {
            txt = t; // bad
        }
    }
}
    ]]></code>
   </test-code>

    <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy bad, modify and consume</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>8,12</expected-linenumbers>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
class Bad8 {
    @GuardedBy("this")
    private String txt;
    private final AtomicBoolean ab = new AtomicBoolean();

    public void modifyText() {
        txt += "-appended"; //bad
    }

    public void consumeText() {
        ab.set(txt.equals("bla")); //bad
    }
}
    ]]></code>
    </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy good sync modifier</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Good1 {
    @GuardedBy("this")
    private String txt;

    public synchronized String getText() {
        return txt;
    }
    public synchronized void setText(String t) {
        txt = t;
    }
}
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy good sync block</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
public class Good2 {
    @GuardedBy("this")
    private String txt;

    public String getText() {
        synchronized(this) {
            return txt;
        }
    }
    public void setText(String t) {
        synchronized(this) {
            txt = t;
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy good modify/consume/Autowired</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import net.jcip.annotations.GuardedBy;
import java.util.concurrent.atomic.AtomicBoolean;
import org.springframework.beans.factory.annotation.Autowired;
class Good3 {
    @GuardedBy("this")
    private String txt;
    private final AtomicBoolean ab = new AtomicBoolean();

    public void modifyText() {
        synchronized(this) {
            txt += "-appended";
        }
    }

    public void consumeText() {
        synchronized(this) {
            ab.set(txt.equals("bla"));
        }
    }

    @Autowired
    public void setText(String t) {
        txt = t;
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>missed case of NotProperlySynchronizingOnThisWhileUsingGuardedBy #205</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>23</expected-linenumbers>
        <code><![CDATA[
import java.util.*;
import javax.annotation.concurrent.GuardedBy;

public enum Category {
    ERROR("ERROR"), WARNING("WARNING");

    @GuardedBy("this")
    private static final Map<String, Category> mapping = new HashMap<>();

    static {
        Arrays.stream(Category.values()).forEach(unit -> mapping.put(unit.getValue(), unit));
    }

    @Getter(onMethod = @__({ @JsonValue }))
    private String value;

    Category(String value) {
        this.value = value;
    }

    @JsonCreator
    public static Category fromValue(String value) {
        return EnumUtil.getValue( mapping, value); // bad
    }
}
     ]]></code>
    </test-code>

</test-data>
