<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>violation: Avoid XxxStream default constructor</description>
        <expected-problems>3</expected-problems>
        <expected-linenumbers>7,10,13</expected-linenumbers>
        <code><![CDATA[
import java.io.ByteArrayOutputStream;
import java.io.StringWriter;

public class Foo {
    public static void testViolation1()  {
        ByteArrayOutputStream baos = null;
        baos = new ByteArrayOutputStream(); //bad
    }
    public static void testViolation2()  {
        ByteArrayOutputStream baos = new ByteArrayOutputStream(); //bad
    }
    public static void testViolation3()  {
        StringWriter sw = new StringWriter(); //bad
    }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>no violation: Avoid XxxStream default constructor</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import java.io.ByteArrayOutputStream;
import java.io.StringWriter;

public class Bar {
    public static void testNoViolation1()  {
        ByteArrayOutputStream baos = null;
        baos = new ByteArrayOutputStream(8192); // 8 kiB
    }
    public static void testNoViolation2()  {
        ByteArrayOutputStream baos = new ByteArrayOutputStream(4096);
    }
    public static void testNoViolation3()  {
        StringWriter sw = new StringWriter(2048);
    }
}
     ]]></code>
     </test-code>

    <test-code>
        <description>violation: Avoid XxxStream constructor with less than or equal to default capacity #95</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>9,15</expected-linenumbers>
        <code><![CDATA[
import java.io.ByteArrayOutputStream;
import java.io.StringWriter;
 class Foo2 {
    int SW_SIZE_1 = 16;
    int SW_SIZE_2 = 17;

    public static void testViolation1()  {
        ByteArrayOutputStream baos = null;
        baos = new ByteArrayOutputStream(32); //bad
    }
    public static void testViolation2()  {
        ByteArrayOutputStream baos = new ByteArrayOutputStream(33); //good
    }
    public static void testViolation3()  {
        StringWriter sw = new StringWriter(SW_SIZE_1); //bad
    }
    public static void testViolation4()  {
        StringWriter sw = new StringWriter(SW_SIZE_2); //good
    }
}
     ]]></code>
    </test-code>
</test-data>
