<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>violation: time unit missing in method parameter</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>3,5</expected-linenumbers>
        <code><![CDATA[
public class RetrieveCache {
    @Autowired
    public RetrieveCache(final long timeToLive) { // bad
    }
    public void confuse(int expiryTime) { // bad
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: time unit missing in @Value member</description>
        <expected-problems>5</expected-problems>
        <expected-linenumbers>2,3,6,8,10</expected-linenumbers>
        <code><![CDATA[
public class RetrieveCache {
    private static final long TOKEN_TTL = 1000L * 60 * 15; // bad
    private static final long TOKEN_TIMEOUT = 1000L * 60 * 60 * 8; // bad

    @Autowired
    public RetrieveCache(final @Value("${cache.expiryTime}") long timeToLiveSeconds) { // 1x bad
    }
    public confuse(@Value("${cache.timeOut}") int expiryTimeHours) { // 1x bad
    }
    foo(@Value("${cache.ttl}") int expiryTTLSeconds) { // 1x bad
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: time unit present</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class RetrieveCache {
    private static final long TOKEN_TTL_MS = 1000L * 60 * 15; // good
    private static final long TOKEN_TIMEOUT_MILLIS = 1000L * 60 * 60 * 8; // good

    @Autowired
    public RetrieveCache(final @Value("${cache.expiryTimeSeconds}") long timeToLiveSeconds) { // good
    }
    public void confuse(@Value("${cache.expiryTimeHours}") int expiryTimeHours) { // good
    }
    foo(@Value("${cache.ttlSeconds}") int expiryTTLSeconds) { // good
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: time unit violation only for primitives</description>
        <expected-problems>3</expected-problems>
        <expected-linenumbers>3,10,11</expected-linenumbers>
        <code><![CDATA[
import java.time.*;
public class Issue134 {
    public Issue134(final int timeToLive) { // bad
    }
    public Issue134(final Temporal timeToLive) { // good
    }
    void work(final Object timeToLive) { // good
    }
    public void confuse(int expiryTimeHours) { // good
        long someLongTimeToLive = expiryTimeHours; // bad
        float someFloatTimeout; // bad
        Duration someMoreTimeToLive; // good
        LocalDateTime localExpiryTime; // good
        String stringExpiryTime; // good
    }
}
        ]]></code>
    </test-code>
</test-data>
